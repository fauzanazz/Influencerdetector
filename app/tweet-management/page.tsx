import { Tweets } from "@/components/tweets";import { Separator } from "@/components/ui/separator";import TweetBatchComponent from "@/app/tweet-management/TweetBatchComponent";import {Tweet, User} from "@prisma/client";import {TweetDB} from "@/data/database";async function getTweets() {    const res = await fetch(`http://localhost:3000/api/tweets`,{        method: "GET",        headers: {            "Content-Type": "application/json"        },        cache: "no-cache"    });    return await res.json().then((data) => data.tweetsData);}async function getUsers(){    const res = await fetch(`http://localhost:3000/api/users`,{        method: "GET",        headers: {            "Content-Type": "application/json"        },        cache: "no-cache"    });    return await res.json().then((data) => data.usersData);}export default async function TweetManagement() {    const tweetsPromise = getTweets();    const usersPromise = getUsers();    const [tweets, users] = await Promise.all([tweetsPromise, usersPromise]);    const formattedTweets = tweets.map((tweet: Tweet) => {        return {            value: tweet.id,            label: tweet.content        }    });    const formattedUsers = users.map((user: User) => {        return {            value: user.id,            label: user.name        }    });    return (        <div>            <div className="select-none h-10 border bg-gray-200 flex items-center justify-center">                <TweetBatchComponent Tweets={formattedTweets} Users={formattedUsers}/>            </div>            <div className="">                {tweets.map((tweet: TweetDB) => (                    <>                        <Tweets key={tweet.id} maintweets={tweet} Tweets={formattedTweets} User={users} action />                        <Separator className="bg-gray-200"/>                    </>                ))}            </div>        </div>    );}